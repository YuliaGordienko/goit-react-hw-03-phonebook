{"version":3,"sources":["Input/Input.module.css","Input/Input.jsx","ContactsList/ContactsList.jsx","FiltrByName/FiltrByName.jsx","App.js","reportWebVitals.js","index.js","ContactsList/contactslist.module.css"],"names":["module","exports","Input","handleSubmit","handleChange","valueName","valueNumber","onSubmit","value","type","name","pattern","title","required","onChange","ContactList","require","v4","contacts","onDeleteContacts","length","className","s","list","map","contact","item","discribe","number","onClick","id","FiltrByName","uuidv4","App","state","filter","e","currentTarget","setState","preventDefault","find","alert","arrayContacs","filterLowerCase","toLowerCase","includes","handleFilterChange","console","log","deleteContacs","contactId","prevState","localStorage","getItem","parseContacts","JSON","parse","this","prevProps","setItem","stringify","getArr","style","marginLeft","ContactsList","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.698baba1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__2hHEt\"};","import React from \"react\";\r\nimport s from \"./Input.module.css\";\r\nconst Input = ({ handleSubmit, handleChange, valueName, valueNumber }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={valueName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={valueNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport s from \"./contactslist.module.css\";\r\nconst { v4: uuidv4 } = require(\"uuid\");\r\nconst ContactList = ({ contacts, onDeleteContacts }) => {\r\n  return (\r\n    <>\r\n      <p>Contacs:</p>\r\n      {contacts.length > 0 && (\r\n        <ul className={s.list}>\r\n          {contacts.map((contact) => (\r\n            <li key={contact.id} className={s.item}>\r\n              <p className={s.discribe}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onDeleteContacts(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nconst FiltrByName = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nexport default FiltrByName;\r\n","import React, { Component } from \"react\";\nimport Input from \"./Input/Input\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport FiltrByName from \"./FiltrByName/FiltrByName\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  arrayContacs = () => {\n    const filterLowerCase = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterLowerCase)\n    );\n  };\n  handleFilterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n    console.log(this.state.filter);\n  };\n  deleteContacs = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevState, prevProps) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const getArr = this.arrayContacs();\n    return (\n      <div style={{ marginLeft: \"20px\" }}>\n        <h1>Phonebook</h1>\n        <Input\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          valueName={this.state.name}\n          valueNumber={this.state.number}\n        />\n        <FiltrByName\n          value={this.state.filter}\n          onChange={this.handleFilterChange}\n        />\n        <ContactsList contacts={getArr} onDeleteContacts={this.deleteContacs} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactslist_item__3890Q\",\"discribe\":\"contactslist_discribe__3rrhr\"};"],"sourceRoot":""}